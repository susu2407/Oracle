/*
    날짜 : 2025/07/22
    이름 : 이수연
    내용 : SQL 연습문제 3
*/
-- 실습 3-1
ALTER SESSION SET "_ORACLE_SCRIPT"=true;
CREATE USER bank IDENTIFIED BY 1234;
GRANT CONNECT, RESOURCE, UNLIMITED TABLESPACE TO bank;
exit

-- 실습 3-2
DROP TABLE CUSTOMER;
create table CUSTOMER(
    C_ID    VARCHAR2(14)    PRIMARY KEY,
    C_NAME  VARCHAR2(20)    NOT NULL,
    C_TYPE  NUMBER(1)       NOT NULL,
    C_HP    VARCHAR2(14)    UNIQUE NOT NULL,
    C_ADDR  VARCHAR2(100)   DEFAULT NULL
);
DROP TABLE ACCOUNT;
CREATE TABLE ACCOUNT (
    ACC_NO      CHAR(11)    PRIMARY KEY,
    ACC_TYPE    CHAR(2)     NOT NULL,
    ACC_NAME    VARCHAR2(20)NOT NULL,
    ACC_CID     VARCHAR2(14)    NOT NULL,
    ACC_BALANCE NUMBER      DEFAULT 0,
    ACC_DATE    DATE        NOT NULL,
    FOREIGN KEY (ACC_CID) REFERENCES CUSTOMER (C_ID)
);
DROP TABLE TRANSACTION;
CREATE TABLE TRANSACTION (
    TR_NO       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TR_ACC      CHAR(11)    NOT NULL,
    TR_TYPE     NUMBER(1)   NOT NULL,
    TR_AMOUNT   NUMBER      DEFAULT 0,
    TR_DATE     DATE        NOT NULL,
    FOREIGN KEY (TR_ACC) REFERENCES ACCOUNT (ACC_NO)
);


-- 실습 3-3
INSERT INTO CUSTOMER VALUES ('730423-1000001', '김유신', 1,'010-1234-1001','경기도 수원시');
INSERT INTO CUSTOMER VALUES ('750210-1000002', '김춘추', 1,'010-1234-1002','경기도 광주시');
INSERT INTO CUSTOMER VALUES ('830513-2000003', '선덕여왕', 1,'010-1234-1003','서울시 마포구');
INSERT INTO CUSTOMER VALUES ('870830-1000004', '강감찬', 1,'010-1234-1004','서울시 영등포구');
INSERT INTO CUSTOMER VALUES ('910913-2000005', '신사임당', 1,'010-1234-1005','강원도 강릉시');
INSERT INTO CUSTOMER VALUES ('941127-1000006', '이순신', 1,'010-1234-1006','부산시 영도구');
INSERT INTO CUSTOMER VALUES ('220-83-52237', '(주)한국전산', 2,'03-1234-1045','서울시 강서구');
INSERT INTO CUSTOMER VALUES ('361-23-42687', '(주)정보산업', 2,'031-563-1253','경기도 광명시');
INSERT INTO CUSTOMER VALUES ('103-23-51094', '부산의원', 2,'051-518-1010','부산시 남구');

INSERT INTO ACCOUNT VALUES ('101-11-1001', 'S1', '자유저축예금', '730423-1000001', 420000, '2005-07-21 12:10:03');
INSERT INTO ACCOUNT VALUES ('101-13-1002', 'S2', '정기저축예금', '830513-2000003', 1020000, '2011-05-13 13:20:12');
INSERT INTO ACCOUNT VALUES ('101-11-1003', 'S1', '자유저축예금', '870830-1000004', 53000, '2007-03-17 21:54:06');
INSERT INTO ACCOUNT VALUES ('101-21-1004', 'L1', '고객신용대출', '910913-2000005', 1200500, '2009-08-25 14:34:57');
INSERT INTO ACCOUNT VALUES ('101-13-1005', 'S3', '주택청약예금', '941127-1000006', 720800, '2013-10-15 19:56:34');
INSERT INTO ACCOUNT VALUES ('101-23-1006', 'L2', '예금담보대출', '730423-1000001', 250000, '2013-13-11 18:14:22');
INSERT INTO ACCOUNT VALUES ('101-23-1007', 'L2', '주택담보대출', '750210-1000002', 2700000, '2020-09-23 09:19:13');
INSERT INTO ACCOUNT VALUES ('101-11-2001', 'S1', '자유저축예금', '220-83-52237', 23000000, '2003-04-14 11:02:43');
INSERT INTO ACCOUNT VALUES ('101-11-2002', 'S1', '자유저축예금', '361-23-42687', 4201000, '2008-01-30 12:32:59');
INSERT INTO ACCOUNT VALUES ('101-11-2003', 'S1', '자유저축예금', '103-23-51094', 8325010, '2010-06-07 15:47:04');

INSERT INTO TRANSACTION VALUES (1, '101-11-1001', 1, 50000, '2025-07-12 13:55:31');
INSERT INTO TRANSACTION VALUES (2, '101-11-1003', 1, 120000, '2025-07-12 14:15:22');
INSERT INTO TRANSACTION VALUES (3, '101-11-2001', 2, 300000, '2025-07-19 17:53:42');
INSERT INTO TRANSACTION VALUES (4, '101-13-1002', 1, 1000000, '2025-07-20 07:25:08');
INSERT INTO TRANSACTION VALUES (5, '101-11-1001', 0, 0, '2025-07-20 09:21:13');
INSERT INTO TRANSACTION VALUES (6, '101-13-1005', 1, 200000, '2025-07-20 10:15:02');
INSERT INTO TRANSACTION VALUES (7, '101-11-1001', 1, 450000, '2025-07-20 11:34:42');
INSERT INTO TRANSACTION VALUES (8, '101-11-2002', 2, 32000, '2025-07-21 09:12:37');
INSERT INTO TRANSACTION VALUES (9, '101-11-2003', 0, 0, '2025-07-21 16:02:31');
INSERT INTO TRANSACTION VALUES (10,'101-11-1003', 2, 75000, '2025-07-21 17:41:11');

-- 실습 3-4
SELECT * FROM ACCOUNT;

-- 실습 3-5
SELECT * FROM CUSTOMER;

-- 실습 3-6
--땡 SELECT * FROM transaction;
select * from transaction where tr_type <> 0;
select * from transaction where tr_type != 0;
select * from transaction where tr_type in (1, 2);
select * from transaction where tr_type = 1 or tr_type = 2;
-- 실습 3-7
SELECT C_NAME, C_ID FROM customer;

-- 실습 3-8
SELECT ACC_TYPE, ACC_NAME FROM ACCOUNT;

-- 실습 3-9
SELECT DISTINCT ACC_TYPE, ACC_NAME FROM ACCOUNT;

-- 실습 3-10
SELECT * FROM ACCOUNT WHERE ACC_TYPE = 'S1' and ACC_BALANCE >= 1000000;

-- 실습 3-11
SELECT * FROM CUSTOMER WHERE C_ADDR LIKE '경기도%';

-- 실습 3-12
SELECT * FROM CUSTOMER WHERE C_TYPE = '2';

-- 실습 3-13
SELECT * FROM TRANSACTION WHERE TR_TYPE = '1';

-- 실습 3-14
SELECT * FROM TRANSACTION WHERE TR_TYPE = '2' ORDER BY TR_AMOUNT DESC ;

-- 실습 3-15
SELECT
    SUM(tr_amount) AS 입금총합, AVG(tr_amount) AS 입금평균
FROM TRANSACTION WHERE tr_type=1;

-- 실습 3-16
SELECT
   MAX(TR_AMOUNT) AS "큰 금액", MIN(TR_AMOUNT) AS "작은 금액"
FROM TRANSACTION 
WHERE tr_type=2;

-- 실습 3-17
SELECT * FROM account 
    WHERE ACC_NAME = '자유저축예금' 
    AND ACC_BALANCE >= 1000000 
    ORDER BY ACC_BALANCE DESC;

-- 실습 3-18
SELECT * FROM account 
WHERE ACC_NAME = '자유저축예금'
ORDER BY ACC_BALANCE DESC FETCH FIRST 1 ROW ONLY;

-- 실습 3-19
SELECT * FROM TRANSACTION WHERE TR_TYPE >0
ORDER BY tr_type, tr_amount DESC;

-- 실습 3-20
SELECT
COUNT(CASE WHEN TR_TYPE = 0 THEN 1 END) AS "조회 건수",
COUNT(CASE WHEN TR_TYPE = 1 THEN 1 END) AS "입금 건수",
COUNT(CASE WHEN TR_TYPE = 2 THEN 1 END) AS "출금 건수"
FROM TRANSACTION;

-- 실습 3-21 -- CASE?!?!!!
SELECT
    TR_TYPE,
    CASE
        WHEN TR_TYPE = 0 THEN '조회'
        WHEN TR_TYPE = 1 THEN '입금'
        WHEN TR_TYPE = 2 THEN '출금'        
    END AS "거래종류",
    TR_ACC,
    TR_AMOUNT
FROM TRANSACTION;

-- 실습 3-22
SELECT tr_type, COUNT(tr_no) FROM TRANSACTION
GROUP BY TR_TYPE ORDER BY TR_TYPE ASC;

-- 실습 3-23 -- HELP ME, THANK YOU
SELECT
    TR_ACC,
    TR_TYPE,
    SUM(tr_amount) AS 합계
FROM TRANSACTION
WHERE       TR_TYPE = '1'
GROUP BY    TR_ACC, TR_TYPE
HAVING      SUM(tr_amount) >= 100000
ORDER BY    합계 DESC;

-- 실습 3-24
SELECT
     TR_ACC,
     COUNT(*) AS 거래건수,
     SUM(TR_AMOUNT) AS 총거래금액
FROM TRANSACTION
WHERE TR_TYPE IN (1, 2)
GROUP BY TR_ACC
HAVING SUM(TR_AMOUNT) >=100000
ORDER BY 총거래금액 DESC
OFFSET 1 ROW FETCH NEXT 2 ROWS ONLY;

-- 실습 3-25 -- 오옹?! 나 대단해?
SELECT
    ACC_NO,
    ACC_NAME,
    C_ID,
    C_NAME,
    ACC_BALANCE,
    ACC_DATE
FROM ACCOUNT a
JOIN CUSTOMER c ON a.ACC_CID = c.C_ID;

-- 실습 3-26 -- 와우!! 내가 참고없이 해냈어~~> <!!
SELECT 
    ACC_NO AS 계좌번호,
    ACC_NAME AS 계좌이름,
    ACC_CID AS  "주민번호(사업자번호)",
    C_NAME AS 고객명,
    ACC_BALANCE AS 현재잔액
FROM ACCOUNT a
JOIN CUSTOMER c ON a.ACC_CID = c.C_ID
WHERE ACC_BALANCE >= 1000000
ORDER BY ACC_BALANCE DESC;

-- 실습 3-27
SELECT
    TR_NO,
    TR_ACC,
    ACC_CID,
    TR_TYPE,
    TR_AMOUNT,
    TR_DATE
FROM transaction t
JOIN ACCOUNT a ON t.TR_ACC = a.ACC_NO;

-- 실습 3-28
SELECT
    a.acc_no,
    c.C_NAME,
    SUM(CASE WHEN t.TR_TYPE = 1 THEN t.TR_AMOUNT ELSE 0 END) AS 총입금액,
    SUM(CASE WHEN t.TR_TYPE = 2 THEN t.TR_AMOUNT ELSE 0 END) AS 총출금액
FROM TRANSACTION t
    FULL OUTER JOIN ACCOUNT a ON t.TR_ACC = a.ACC_NO
    JOIN CUSTOMER c ON a.ACC_CID = c.C_ID
    WHERE c.C_TYPE = 1 -- 개인 고객
    GROUP BY a.acc_no, c.C_NAME;

-- 실습 3-29
SELECT
    a.ACC_NO,
    a.ACC_CID,
    a.ACC_NAME,
    c.c_NAME,
    a.aCC_BALANCE +
        SUM(CASE WHEN t.TR_TYPE = 001 THEN t.TR_AMOUNT ELSE 0 END) -
        SUM(CASE WHEN t.TR_TYPE = 002 THEN t.TR_AMOUNT ELSE 0 END) AS 최종잔액
    FROM ACCOUNT a
    LEFT JOIN TRANSACTION t ON a.ACC_NO = t.TR_ACC
    JOIN CUSTOMER c ON a.ACC_CID = c.C_ID
    WHERE C_TYPE = 1
    GROUP BY 
        a.ACC_NO,
        a.ACC_CID,
        a.ACC_NAME,
        c.c_NAME,
        a.aCC_BALANCE
    ORDER BY a.ACC_NO;

-- 실습 3-30
SELECT
    c.C_NAME,
    a.ACC_NO,
    t.TOTAL_DEPOSIT,
    c.C_ADDR
FROM ACCOUNT a
    JOIN CUSTOMER c ON a.ACC_CID = c.C_ID
    JOIN (
        SELECT
            TR_ACC,
            SUM(TR_AMOUNT) AS TOTAL_DEPOSIT
            FROM TRANSACTION
            WHERE TR_TYPE = 1
            GROUP BY TR_ACC
        ) t ON a.ACC_NO = t.TR_ACC
    WHERE t.TOTAL_DEPOSIT = (
            SELECT
                MAX(SUM_AMOUNT)
            FROM (
                SELECT
                    TR_ACC,
                    SUM(TR_AMOUNT) AS SUM_AMOUNT
                FROM TRANSACTION
                WHERE TR_TYPE = 1
                GROUP BY TR_ACC 
                )
    );
