/*
    날짜 : 2025/07/15
    이름 : 이수연
    내용 : 3장 SQL 고습
*/

-- 실습하기 3-1. 테이블 생성 및 데이터 입력
CREATE TABLE EMP(
    EMPNO number(4)primary key,
    NAME varchar2(20)not null,
    GENDER char(1)not null,
    JOB varchar(20)not null,
    DEPNO number(2),
    REGDATE date not null
);

CREATE TABLE DEPT(
    DEPTNO number(2),
    DNAME varchar2(20),
    DTEL varchar2(12)
);

CREATE TABLE SALE(
    NO number generated by default as identity primary key,
    EMPNO number(4) not null,
    YEAR number(4) not null,
    MONTH number(2)not null,
    PRICE number(10)
);

// 직원 테이블 데이터 입력
INSERT INTO EMP VALUES (1001, '김유신', 'M', '사원', 10, SYSDATE);
INSERT INTO EMP VALUES (1002, '김춘추', 'M', '대리', 20, SYSDATE);
INSERT INTO EMP VALUES (1003, '장보고', 'M', '과장', 10, SYSDATE);
INSERT INTO EMP VALUES (1004, '강감찬', 'M', '부장', 30, SYSDATE);
INSERT INTO EMP VALUES (1005, '신사임당', 'F', '대리', 20, SYSDATE);
INSERT INTO EMP VALUES (1006, '이황', 'M', '사원', 40, SYSDATE);
INSERT INTO EMP VALUES (1007, '이이', 'M', '과장', 20, SYSDATE);
INSERT INTO EMP VALUES (1008, '이순신', 'M', '사원', NULL, SYSDATE);
INSERT INTO EMP VALUES (1009, '허난설헌', 'F', '사원', NULL, SYSDATE);
INSERT INTO EMP VALUES (1010, '정약용', 'M', '대리', 50, SYSDATE);
// 부서 테이블 데이터 입력
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (10, '영업1부', '051-511-1000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (20, '영업2부', '051-511-2000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (30, '영업3부', '051-511-3000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (40, '영업4부', '051-511-4000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (50, '영업지원부', '051-511-5000');
// 매출 테이블 데이터 입력
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1001, 2023, 1, 98100);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2023, 1, 136000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2023, 1, 80000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1004, 2023, 1, 78000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1005, 2023, 1, NULL);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1001, 2023, 2, 23500);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2023, 2, 126000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2023, 2, 18500);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1005, 2023, 2, 19000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1010, 2023, 2, 53000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1001, 2024, 1, 24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2024, 1, 109000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2024, 1, 80000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1004, 2024, 1, NULL);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1007, 2024, 1, 24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2024, 2, 160000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2024, 2, 101000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1004, 2024, 2, 43000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1005, 2024, 2, 24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1006, 2024, 2, 109000);

SELECT * FROM EMP WHERE name = '김유신';
SELECT * FROM EMP WHERE job = '사원' and depno = 10;
SELECT * FROM EMP WHERE job = '차장' OR depno = 10;
SELECT * FROM EMP WHERE name != '김춘추';
SELECT * FROM EMP WHERe name <> '김춘추';
SELECT * FROM EMP WHEre job = '사원' and depno =10;
SELECT * FROM EMP WHERE job = '사원' or job = '대리';
SELECT * FROM EMP WHERE job in('사원', '대리');
SELECT * FROM EMP WHERE depno in(101, 102, 103);
SELECT * FROM EMP WHERE name like '김%';
SELECT * FROM EMP WHERE name like '%신';
SELECT * FROM EMP WHERE name like '김__';
SELECT * FROM EMP WHERE name like '이_';
SELECT * FROM EMP WHERE name like '_순%';
SELECT * FROM EMP WHERE hp like '010-1111%'; //없는 열
SELECT * FROM EMP WHERE depno is null;
SELECT * FROM EMP WHERE depno is not null;
SELECT * FROM EMP WHERE empno >= 1005;
SELECT * FROM DEPT WHERE deptno = 10;
SELECT * FROM DEPT WHERE dname = '영업지원부';
SELECT * FROM DEPT WHERE dtel like '%30%';
SELECT * FROM DEPT WHERE deptno in (10, 30);
SELECT * FROM DEPT WHERE dname like '영업__';
SELECT * FROM SALE WHERE PRICE > 50000;
SELECT * FROM SALE WHERE price >= 50000 and price <100000 and month =1;
SELECT * FROM SALE WHERE price between 50000 and 100000;
SELECT * FROM SALE WHERE year = 2024;
SELECT * FROM SALE WHERE year = 2024 and month = 2;
SELECT * FROM SALE WHERE month in(1,2);

-- 실습하기 2-2
select * from sale order by price;
select * from sale order by PRICE asc; // ASC 는 작은 값부터 큰 수로 나열
select * from sale order by price desc; //DESC 는 큰 갑부터 작은 수로 나열

select * from emp order by name;
SELECT * FROM EMP ORDER BY NAME DESC; // 큰 값부터 작은 값 순으로 나열
select * from emp order by rdate asc;

SELECT * FROM SALE WHERE PRICE > 50000 ORDER BY PRICE DESC;
SELECT * FROM SALE
    WHERE PRICE > 50000
    ORDER BY YEAR DESC, MONTH, PRICE DESC; // 5만원보다 크고, 연도 순/월 순/가격 순 순서대로 나열

SELECT * FROM SALE FETCH FIRST 3 ROWS ONLY; // FETCH 개수제한 FIRST 처음부터 3ROW 3행
SELECT * FROM SALE OFFSET 0 ROW FETCH NEXT 3 ROWS ONLY; //윗 줄이랑 같음. 단, OFFSET 0은 0부터 시작해서 3행.
SELECT * FROM SALE OFFSET 1 ROW FETCH NEXT 2 ROWS ONLY; //2번줄부터(OFFSET) 2개의 행(2 ROWS)까지 출력.
SELECT * FROM SALE OFFSET 5 ROW FETCH NEXT 3 ROWS ONLY; //6번 부터 3개. 6,7,8번 데이터가 출력됨.
SELECT * FROM SALE ORDER BY PRICE DESC OFFSET 3 ROWS FETCH NEXT 5 ROWS ONLY; //

SELECT * FROM SALE
    WHERE PRICE < 50000
    ORDER BY PRICE DESC
    FETCH FIRST 3 ROWS ONLY;
    
SELECT * FROM SALE
    WHERE PRICE > 50000
    ORDER BY YEAR DESC, MONTH, PRICE DESC
    FETCH FIRST 5 ROWS ONLY;
 
SELECT DISTINCT DEPNO FROM EMP;
SELECT DISTINCT JOB, DEPNO FROM EMP;

SELECT EMPNO AS 사번, NAME AS 이름, GENDER "성 별" FROM EMP;
SELECT EMPNO E, NAME N, GENDER G FROM EMP;

-- 실습하기 3-1. 다양한 SQL 숫자 함수 실습
SELECT SUM(PRICE) AS 합계 FROM Sale;
select count(*) as 직원수 from emp;
select count(empno) as 부서수 from emp;

select cell(1.2) from dual;
select cell(12.8) from dual;
select floor(1.2) from dual;
select floor(1.8) from dual;
select round(1.2) from dual;
select round(1.8) from dual;

select dbms_random.value from dual;
select ceil(dbms_random.value * 10) from dual;

-- 실습하기 3-2.다양한 SQL 문자 합수 실습
select 'Hello ORACLE!', LENGTH('HELLO ORACLE!') FROM DUAL;
SELECT
    'HELLO ORACLE!',
    SUBSTR('HELLO ORACLE!', 1, 3),
    SUBSTR('HELLO ORACLE!', 3, 2),
    SUBSTR('HELLO ORACLE!', 5)
    FROM DUAL;
SELECT
    INSTR('HELLO ORACLE!', 'L') AS INSTR_1,
    INSTR('HELLO ORACLE!', 'L', -1) AS INSTR_2
FROM DUAL;    
SELECT '010-1234-5678', REPLACE('010-1234-5678', '-', '') FROM DUAL;
SELECT 
    LPAD('Oracle', 10, '#') AS LPAD, // (대상문자열, 전체길이, 패딩문자)
    RPAD('Oracle', 10,'*') AS RPAD
FROM DUAL;

//CONCAT : 문자 연결 ★★★ 
SELECT CONCAT(EMPNO, NAME) FROM EMP WHERE NAME = '이순신';
SELECT EMPNO || NAME FROM EMP WHERE NAME = '정약용';

SELECT
    '[ _Oracle_ ]' AS BEFORE,
    '[' || TRIM('_Orcle_') || ']' AS TRIMED
FROM DUAL;    

--실습하기 3-3. SQL 날짜 함수 ★★★
SELECT
    SYSDATE,
    SYSDATE - 1,
    SYSDATE + 1
FROM DUAL;

---- 놓침.
// ADD_MONTHS(d, n) : 몇 개월 이후 날짜 조회
SELECT
    ADD_MONTHS(SYSDATE, 1),
    ADD_MONTHS(SYSDATE, -1)
 FROM DUAL;
// MONTHS_BETWEEN(d1, d2) : 두 날짜 간 개월 수 계산
SELECT
    MONTHS_BETWEEN(DATE '2025-07-13', DATE '2024-07-13') AS 개월차 FROM DUAL;
// NEXT_DAY(d, '요일') : d 이후의 특정 요일 날짜
SELECT
NEXT_DAY(SYSDATE, '월요일') AS 다음_월요일 FROM DUAL;

--실습하기 3-4. SQL 기타 함수 실습
// TO_CHAR : 날짜 데이터를 문자 데이터로 변환
SELECT
    TO_CHAR(SYSDATE, 'YYYY') AS YYYY,
    TO_CHAR(SYSDATE, 'MM') AS MM,
    TO_CHAR(SYSDATE, 'DD') AS DD,
    TO_CHAR(SYSDATE, 'HH24') AS HH24,
    TO_CHAR(SYSDATE, 'MI') AS MI,
    TO_CHAR(SYSDATE, 'SS') AS SS,
    TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') AS 날짜시간
 FROM DUAL;
INSERT INTO EMP VALUES (1011, '안중근', 'M', '부장', 30, TO_CHAR(SYSDATE, 'YYYY/MM/DD'));

// TO_DATE : 문자 데이터를 날짜 데이터로 변환
SELECT
    TO_DATE('20250714', 'YYYY/MM/DD') AS 날짜1,
    TO_DATE('250714', 'YY-MM-DD') AS 날짜2,
    TO_DATE(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') AS 날짜시간
 FROM DUAL;
 
INSERT INTO EMP VALUES (1012, '유관순', 'F', '차장', 20, SYSDATE);
//INSERT INTO EMP VALUES (1013, '윤봉길', 'M', '과장', 30,
                        // TO_DATE(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'));

-- 여기까지 놓침. 테이블 세팅이 이상해서 복구했음.

SELECT
    NO,
    EMPNO,
    YEAR,
    MONTH,
    NVL(PRICE, 0)
FROM SALE;

SELECT
    EMPNO, NAME, GENDER, JOB, NVL2(DEPNO, '정규직', '비정규직')
FROM EMP;

--여기까지 워크북 23페이지 내용

-- 4.그룹화 /워크북 P.24
-- 실습 4-1. 그룹화
select empno from sale group by empno; //네추럴 테이블에서 empno(직원번호)를 그룹화 시킴.
select year from sale group by year;
select empno, year from sale group by empno, year;

select empno, count(*) as 판매건수 from sale group by empno;
select empno, sum(price) as 합계 from sale group by empno;
select empno, avg(price) as 평균 from sale group by empno;

select empno, year, sum(price) as 합계
    from sale
    group by empno, year;

select empno, year, sum(price) as 합계
    from sale
    group by empno, year
    order by year asc, 합계 desc; // 연도가 낮은 것부터 나열, 합계가 큰 것 부터 나열

select empno, year, sum(price) as 합계
    from sale
    where price >= 50000   
    group by empno, year
    order by 합계 desc;
--50000 이상 가격에 해당되고 -- empno, year을 각각 그룹핑-- 합계가 큰 것부터 나열

--실습 4-2. 그룹화 조건
select empno, sum(price) as 합계 from sale group by empno HAVING SUM(PRICE) >=200000;

select
    empno, year, sum(price) as 합계
    from sale
    where price >= 50000
    group by empno, year
    having sum(price) >=200000
    order by 합계 desc;

------------------------------------------------------------
--<5.테이블 집합>
--실습 5-1
---중복을 제외시키고 출력
SELECT EMPNO, MONTH, PRICE FROM SALE WHERE YEAR = 2023
UNION
SELECT EMPNO, MONTH, PRICE FROM SALE WHERE YEAR = 2024;

---중복을 포함해서 출력
SELECT EMPNO, MONTH, PRICE FROM SALE WHERE YEAR = 2023
UNION ALL
SELECT EMPNO, MONTH, PRICE FROM SALE WHERE YEAR = 2024;

SELECT EMPNO, YEAR, SUM(PRICE) AS 합계
    FROM SALE
    WHERE YEAR = 2023
    GROUP BY EMPNO, YEAR
UNION
SELECT EMPNO, YEAR, SUM(PRICE) AS 합계
    FROM SALE
    WHERE YEAR = 2024
    GROUP BY EMPNO, YEAR
    ORDER BY YEAR ASC, 합계 DESC;

-- 실습 5-2
SELECT EMPNO FROM SALE WHERE YEAR = 2023
INTERSECT
SELECT EMPNO FROM SALE WHERE YEAR = 2024;

-- 실습 5-3
SELECT EMPNO FROM SALE WHERE YEAR = 2023
MINUS
SELECT EMPNO FROM SALE WHERE YEAR = 2024;

------------------------------------------------
-- 실습 6-1
SELECT 
    *
FROM EMP E
JOIN DEPT D
ON E.DEPNO = D.DEPTNO;

SELECT 
    *
FROM EMP E
JOIN DEPT D
USING (DEPTNO); -- 조인하려는 두 테이블에 공통의 컬럼명이 있어야 함.

SELECT * FROM EMP E, DEPT D WHERE E.DEPNO = D.DEPTNO;

SELECT
    S.NO,
    S.EMPNO,
    E.NAME,
    E.JOB,
    E.REGDATE,
    E.DEPNO,
    D.DNAME
FROM SALE S
JOIN EMP E ON S.EMPNO = E.EMPNO
JOIN DEPT D ON E.DEPNO = D.DEPTNO
WHERE PRICE > 100000 AND YEAR = 2024
ORDER BY S.PRICE DESC;

--실습 6-2
DELETE FROM EMP WHERE EMPNO = 1006;

SELECT * FROM SALE S
LEFT JOIN EMP E ON S.EMPNO = E.EMPNO;

SELECT * FROM SALE S
RIGHT JOIN EMP E ON S.EMPNO = E.EMPNO;












